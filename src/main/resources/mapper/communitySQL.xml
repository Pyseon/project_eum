<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="community">
	<select id="selectCommunityList" resultType="comm" parameterType="map">
		select * from
			(select rownum as rnum, c.* from
			(select 
			    comm.comm_no as commNo,
			    comm_category as commCategory,
			    member_no as memberNo,
			    (select member_nick from member_tbl m where comm.member_no = m.member_no) as memberNick, --멤버닉
			    (select grade from member_tbl m where comm.member_no = m.member_no) as memberGrade, --멤버등급
			    (select member_picturepath from member_tbl m where comm.member_no = m.member_no) as memberPicturepath, --멤버프로필사진
			    comm_title as commTitle,
			    comm_intro as commIntro,
			    read_count as readCount,
			    comm_date as commDate,
			    comm_like as commLike,
			    comm_filename as commFilename,
			    comm_filepath as commFilepath,
			(select nvl(count(*),0) from communityco_tbl co where co.comm_no = comm.comm_no) as cmntCount
		from community_tbl comm 
		<if test="category != 2">
		where comm_category = #{category}
		</if>
		order by comm.comm_no desc) c)
		where (rnum between #{start} and #{end}) and memberNo is not null
	</select> 
	<select id="selectTotalCount" resultType="int" parameterType="map">
		select count(*) from community_tbl where (member_no is not null)
		<if test="category != 2">
		and comm_category = #{category}
		</if>
	</select>
	
	<select id="communityDetail" resultType="comm" parameterType="int">
		select 
			    comm.comm_no as commNo,
			    comm_category as commCategory,
			    member_no as memberNo,
			    (select member_nick from member_tbl m where comm.member_no = m.member_no) as memberNick, --멤버닉
			    (select grade from member_tbl m where comm.member_no = m.member_no) as memberGrade, --멤버등급
			    (select member_picturepath from member_tbl m where comm.member_no = m.member_no) as memberPicturepath, --멤버프로필사진
			    comm_title as commTitle,
			    comm_intro as commIntro,
			    read_count as readCount,
			    comm_content as commContent,
			    advantage,
			    weakness,
			    comm_date as commDate,
			    comm_like as commLike,
			    comm_filename as commFilename,
			    comm_filepath as commFilepath,
			(select nvl(count(*),0) from communityco_tbl co where co.comm_no = comm.comm_no) as cmntCount
		from community_tbl comm where comm_no = ${value}
	</select> 
	
	<select id="readCountUp" parameterType="int">
		update community_tbl set read_count=read_count+1 where comm_no = ${value}
	</select> 
	
	<select id="selectCmntList" resultType="commCo" parameterType="int">
	select
			co.CMNT_NO as cmntNo,
			co.MEMBER_NO as memberNo,
			nvl((select member_nick from member_tbl m where co.member_no = m.member_no), '탈퇴한회원') as memberNick, --멤버닉
			(select grade from member_tbl m where co.member_no = m.member_no) as memberGrade, --멤버등급
			nvl((select member_picturepath from member_tbl m where co.member_no = m.member_no),'delmember.jpg') as memberPicturepath, --멤버프로필사진
			co.CMNT_CONTENT as cmntContent,
			co.CMNT_DATE as cmntDate,
			co.COMM_NO as commNo,
			co.CMNT_REF as cmntRef,
            m.member_nick as cmntRefNick,
			co.CMNT_LEV AS cmntLev,
            co.CMNT_GROUP AS cmntGroup
		from communityco_tbl co
        left join communityco_tbl co2 on co.cmnt_ref = co2.cmnt_no
		left join member_tbl m on co2.member_no = m.member_no
 		where co.comm_no = ${value} order by co.CMNT_group ,co.cmnt_no
	</select> 

	<select id="selectPickList" resultType="pick" parameterType="int">
		select 
		    p.pick_no as pickNo,
		    p.pick_category as pickCategory,
		    p.member_no as memberNo,
		    (select member_nick from member_tbl m where p.member_no = m.member_no) as memberNick, --멤버닉
		    (select grade from member_tbl m where p.member_no = m.member_no) as memberGrade, --멤버등급
			(select member_picturepath from member_tbl m where p.member_no = m.member_no) as memberPicturepath, --멤버프로필사진
		    p.pick_content as pickContent,
		    p.pick_date as pickDate,
		    p.comm_no as commNo,
		    (select count(*) from picklike_tbl pl where p.pick_no = pl.pick_no) as pickLike
		from pick_tbl p
		where p.comm_no = ${value} order by p.pick_no
	</select> 

	<insert id="communityWrite" parameterType="comm">
		insert into community_tbl values(
			COMMUNITY_SEQ.nextval,
			#{commCategory},
			#{memberNo},
			#{commTitle},
			#{commIntro},
			#{commContent},
			#{advantage},
			#{weakness},
			0,
			TO_CHAR(SYSDATE, 'yyyy.mm.dd hh24:mi'),
   			0,
			#{commFilename},
			#{commFilename}
		)
	</insert>
	
	<update id="communityUpdate" parameterType="comm">
		update community_tbl set 
			comm_title = #{commTitle},
			comm_intro = #{commIntro},
			comm_content = #{commContent},
			advantage = #{advantage},
			weakness = #{weakness}
		<if test="commFilename != null">
			, comm_filename = #{commFilename},
			comm_filepath = #{commFilepath}
		</if>
		where comm_no = #{commNo}
	</update>

	<delete id="communityDelete" parameterType="int">
		delete from community_tbl 
			where comm_no = ${value}
	</delete>
	
	<insert id="commCoWrite" parameterType="commCo">
		insert into communityco_tbl values(
			COMMUNITYCO_SEQ.nextval,
		    #{memberNo},
		    #{cmntContent},
		    to_char(sysdate, 'yyyy.mm.dd hh24:mi'),
		    #{commNo},
		    <if test="cmntRef == 0">
		    null,
		    </if>
		    <if test="cmntRef != 0">
		    #{cmntRef},
		    </if>
		    #{cmntLev},
		    <if test="cmntLev == 0">
		    COMMUNITYCO_SEQ.currval
		    </if>
		    <if test="cmntLev > 0">
		    #{cmntGroup}
		    </if>
		)
		<selectKey resultType="int" order="AFTER" keyProperty="cmntNo">
		 	select max(cmnt_no) from communityco_tbl
		</selectKey>
	</insert>
	
	<select id="commCoDetail" resultType="commCo" parameterType="int">
		select
			co.CMNT_NO as cmntNo,
			co.MEMBER_NO as memberNo,
			nvl((select member_nick from member_tbl m where co.member_no = m.member_no), '탈퇴한회원') as memberNick, --멤버닉
			(select grade from member_tbl m where co.member_no = m.member_no) as memberGrade, --멤버등급
			nvl((select NVL(member_picturepath, 'delmember.jpg') from member_tbl m where co.member_no = m.member_no),'delmember.jpg') as memberPicturepath, --멤버프로필사진
			co.CMNT_CONTENT as cmntContent,
			co.CMNT_DATE as cmntDate,
			co.COMM_NO as commNo,
			co.CMNT_REF as cmntRef,
            m.member_nick as cmntRefNick,
			co.CMNT_LEV AS cmntLev,
            co.CMNT_GROUP AS cmntGroup
		from communityco_tbl co
        left join communityco_tbl co2 on co.cmnt_ref = co2.cmnt_no
		left join member_tbl m on co2.member_no = m.member_no
 		where co.cmnt_no = ${value}
	</select>
	
	<update id="commCoUpdate" parameterType="commCo">
		update communityco_tbl set
			cmnt_content = #{cmntContent}
		where cmnt_no = #{cmntNo}
	</update>
	
	<delete id="commCoDelete" parameterType="int">
		delete from communityco_tbl 
			where cmnt_no = ${value}
	</delete>
	
	<select id="commentCount" parameterType="map" resultType="int">
		select count(*) from communityco_tbl where comm_no = #{commNo} and cmnt_group = #{cmntGroup}
	</select>
	
	<insert id="pickWrite" parameterType="pick">
		INSERT INTO PICK_TBL VALUES(
		    PICK_SEQ.NEXTVAL,       --픽번호ㅓ
		    #{pickCategory},                  -- 0 이면 해라, 1이면 하지마라
		    #{memberNo},                     --회원번호
		    #{pickContent},                      -- 픽 내용
		    TO_CHAR(SYSDATE, 'mm.dd hh24:mi'),      -- 등록일
		    #{commNo}                                    --글번호
		)
	</insert>
	
	<update id="pickUpdate" parameterType="pick">
		update pick_tbl set
			pick_content = #{pickContent}
		where pick_no = #{pickNo}
	</update>
	
	<delete id="pickDel" parameterType="int">
		delete from pick_tbl 
			where pick_no = ${value}
	</delete>
	
</mapper>
















