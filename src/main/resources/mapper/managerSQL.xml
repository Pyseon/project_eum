<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="manager">
	<select id="MemberList" resultType="member" parameterType="map">
		select * from
		(select rownum as rnum, mem.* from
		(select
			member_no as memberNo,
			member_id as memberId,
			member_nick as memberNick,
			member_phone as memberPhone,
			grade,
			member_point as memberPoint,
			member_reportcount as memberReportCount,
			enrolldate as enrollDate
		from member_tbl 
		<choose>
			<when test="selectNum != 0">
				where grade=#{selectNum }
			</when>
			<otherwise>
				where grade=1 or grade=2 or grade=3
			</otherwise>
		</choose>
		order by member_no desc) mem)
		where rnum between #{start} and #{end}
	</select>
	<select id="memberCount" resultType="int" parameterType="int">
		select count(*) from member_tbl
		<choose>
			<when test="value != 0">
				where grade=#{selectNum }
			</when>
			<otherwise>
				where grade=1 or grade=2 or grade=3
			</otherwise>
		</choose>
	</select>

	<update id="updateBlackList" parameterType="map">
		update member_tbl set
		<choose>
			<when test="updateNo == 0">
				grade=4
			</when>
			<otherwise>
				grade=2
			</otherwise>
		</choose>
		where member_no=#{memberNo}
	</update>
	
	<select id="searchMemberList" parameterType="map" resultType="member">
		select * from
		(select rownum as rnum, mem.* from
		(select
			member_no as memberNo,
			member_id as memberId,
			member_nick as memberNick,
			member_phone as memberPhone,
			grade,
			member_point as memberPoint,
			member_reportcount as memberReportCount,
			enrolldate as enrollDate
		from member_tbl
		<choose>
			<when test="searchType.equals('memberId') ">
				where member_id like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('memberNick') ">
				where member_nick like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				where member_no = #{keyword }
			</otherwise>
		</choose>
		order by member_no desc) mem)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="searchMemberCount" resultType="int" parameterType="map">
		select count(*) from member_tbl
		<choose>
			<when test="searchType.equals('memberId') ">
				where member_id like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('memberNick') ">
				where member_nick like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				where member_no = #{keyword }
			</otherwise>
		</choose>
	</select>
	
	<select id="paymentList" resultType="pay" parameterType="map">
		select * from
		(select rownum as rnum, pay.* from
		(select
			pay_no as payNo,
			(select member_Id from member_tbl m where payment.member_no = m.member_no) as memberId,
			product_no as productNo,
			pay_state as payState,
			pay_date as payDate,
			payment as payment,
			pay_method as payMethod,
			pay_usepoint as payUsepoint,
			pay_addpoint as payAddpoint
		from payment_tbl payment
		<choose>
			<when test="selectNum != 0">
				where pay_state = #{selectNum }
			</when>
			<otherwise>
				where pay_state = 1 or pay_state = 2 or pay_state = 3 
			</otherwise>
		</choose>
		order by pay_no desc) pay)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="searchPaymentList" resultType="pay" parameterType="map">
		select * from
		(select rownum as rnum, pay.* from
		(select
			pay_no as payNo,
			(select member_Id from member_tbl m where payment.member_no = m.member_no) as memberId,
			pay_state as payState,
			pay_date as payDate,
			payment as payment,
			pay_method as payMethod,
			pay_usepoint as payUsepoint,
			pay_addpoint as payAddpoint
		from payment_tbl payment
		<choose>
			<when test="searchType.equals('payNo') ">
				where pay_no = #{keyword }
			</when>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
		</choose>
		order by pay_no desc) pay)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="paymentCount" resultType="int" parameterType="int">
		select count(*) from payment_tbl
		<choose>
			<when test="value != 0">
				where pay_state=#{selectNum }
			</when>
			<otherwise>
				where pay_state=1 or pay_state=2 or pay_state=3
			</otherwise>
		</choose>
	</select>
	
	<select id="searchPaymentCount" resultType="int" parameterType="map">
		select count(*) from payment_tbl
		<choose>
			<when test="searchType.equals('payNo') ">
				where pay_no = #{keyword }
			</when>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
		</choose>
	</select>
	
	<update id="updatePayState" parameterType="map">
		update payment_tbl set
		<choose>
			<when test="updateNo == 0">
				pay_state=3
			</when>
			<otherwise>
				pay_state=1
			</otherwise>
		</choose>
		where pay_no = #{payNo}
	</update>
	
	<select id="detailPayment" parameterType="int" resultType="pay">
		select
			pay_no as payNo,
			pay_date as payDate,
			(select product_title from product_tbl pro where pay.product_no = pro.product_no) as productTitle,
			(select product_imgPath from product_tbl pro where pay.product_no = pro.product_no) as productImgPath,
			pay_state as payState,
			payment,
			pay_method as payMethod,
			pay_usepoint as payUsepoint,
			pay_addpoint as payAddpoint
			from payment_tbl pay
			where pay_no = #{value }
	</select>
	
	<select id="reportList" parameterType="map" resultType="rpt">
		select
		report_no as reportNo,
		defendant,
		(select member_Id from member_tbl m where report.defendant = m.member_no) as defendantId,
		report_date as reportDate,
		report_category as reportCategory,
		report_index as reportIndex,
		report_Title as reportTitle,
		report_is as reportIs
		from report_tbl report
		<choose>
			<when test="selectNum == 1">
				where report_is= 0
			</when>
			<when test="selectNum == 2">
				where report_is= 1
			</when>
			<when test="selectNum == 3">
				where report_is= 2
			</when>
			<otherwise>
				where report_is= 0 or report_is=1 or report_is=2
			</otherwise>
		</choose>
	</select>
	
	<select id="reportCount" resultType="int">
		select count(*) from report_tbl
	</select>
	
	<select id="searchReportList" parameterType="map" resultType="rpt">
		select
		report_no as reportNo,
		defendant,
		(select member_Id from member_tbl m where report.defendant = m.member_no) as defendantId,
		report_date as reportDate,
		report_category as reportCategory,
		report_index as reportIndex,
		report_title as reportTitle,
		report_is as reportIs
		from report_tbl report
		<choose>
			<when test="searchType.equals('reportTitle') ">
				where report_title like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
		</choose>
	</select>
	
	<select id="searchReportCount" parameterType="map" resultType="int">
		select count(*) from report_tbl
		<choose>
			<when test="searchType.equals('reportTitle') ">
				where report_title like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
		</choose>
	</select>
	
	<select id="detailReport" parameterType="int" resultType="rpt">
		select
			report_no as reportNo,
			defendant,
			(select member_Id from member_tbl m where report.defendant = m.member_no) as defendantId,
			(select member_Id from member_tbl m where report.plaintiff = m.member_no) as plaintiffId,
			report_content as reportContent,
			report_date as reportDate,
			report_category as reportCategory,
			report_index as reportIndex,
			report_title as reportTitle
			from report_tbl report
			where report_no = #{value }
	</select>
	
	<select id="reportMember" parameterType="int">
		update member_tbl set 
		grade=4,
		member_reportcount = member_reportcount+1 
		where member_no=#{value }
	</select>
	
	<delete id="deleteArticles" parameterType="map">
		delete from 
		<choose>
			<when test="category == 0">
				product_tbl where product_no = #{index }
			</when>
			<when test="category == 1">
				review_tbl where review_no = #{index }
			</when>
			<when test="category == 2">
				request_tbl where req_no = #{index }
			</when>
			<when test="category == 3">
				community_tbl where comm_no = #{index }
			</when>
			<when test="category == 4">
				communityco_tbl where cmnt_no = #{index }
			</when>
		</choose>
	</delete>
	
	<update id="updateReportIs">
		update report_tbl set 
		report_is = #{selNo }
		where report_no = #{reportNo }
	</update>
	
	<insert id="answerReport" parameterType="map">
		insert into ansrpt_tbl values(ansrpt_seq.nextval,#{reportNo},#{ansrpt_title},#{ansrpt_content})
	</insert>
	
	<select id="FAQList" resultType="faq" parameterType="map">
		select * from
		(select rownum as rnum, faq.* from
		(select
			faq_no as fAQNo,
			faq_title as FAQTitle,
			faq_type as FAQType,
			faq_date as FAQDate
		from faq_tbl
		<if test="selectNum != 0">
			where faq_type = #{selectNum }
		</if>
		order by faq_no desc) faq)
		where rnum between #{start} and #{end}
	</select>
	<select id="FAQCount" resultType="int" parameterType="int">
		select count(*) from faq_tbl
		<if test="value != 0">
			where faq_type = #{value }
		</if>
	</select>
	<select id="searchFAQList" resultType="faq" parameterType="map">
		select * from
		(select rownum as rnum, faq.* from
		(select
			faq_no as fAQNo,
			faq_title as FAQTitle,
			faq_type as FAQType,
			faq_date as FAQDate
		from faq_tbl
		<if test="searchType.equals('FAQTitle') ">
			where faq_title like '%'||#{keyword}||'%'
		</if>
		order by faq_no desc) faq)
		where rnum between #{start} and #{end}
	</select>
	<select id="searchFAQCount" resultType="int" parameterType="map">
		select count(*) from faq_tbl
		<if test="searchType.equals('FAQTitle') ">
			where faq_title like '%'||#{keyword}||'%'
		</if>
	</select>
	
	<insert id="insertFAQ" parameterType="map">
		insert into faq_tbl values(
		faq_seq.nextval, 
		#{FAQTitle}, 
		#{FAQContent}, 
		#{FAQType}, 
		TO_CHAR(SYSDATE,'YYYY-MM-DD'))
	</insert>
	
	<delete id="deleteFAQ" parameterType="int">
		delete faq_tbl where faq_no = #{value }
	</delete>
	
	<select id="selectFAQ" parameterType="int" resultType="faq">
		select
		faq_no as FAQNo,
		faq_title as FAQTitle,
		faq_content as FAQContent,
		faq_type as FAQType
		from faq_tbl
		where faq_no = #{value}
	</select>
	
	<update id="updateFAQ" parameterType="map">
		update faq_tbl set 
		faq_type=#{FAQType}, faq_title=#{FAQTitle}, faq_content=#{FAQContent} 
		where faq_no = #{FAQNo}
	</update>
	
	<select id="noticeList" parameterType="map" resultType="ntc">
		select * from
		(select rownum as rnum, ntc.* from
		(select
			notice_no as noticeNo,
			(select member_Id from member_tbl m where notice.member_no = m.member_no) as memberId,
			notice_date as noticeDate,
			notice_title as noticeTitle
		from notice_tbl notice
		order by notice_no desc) ntc)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="noticeCount" resultType="int">
		select count(*) from notice_tbl
	</select>
	<select id="searchNoticeList" parameterType="map" resultType="ntc">
		select * from
		(select rownum as rnum, ntc.* from
		(select
			notice_no as noticeNo,
			(select member_Id from member_tbl m where notice.member_no = m.member_no) as memberId,
			notice_date as noticeDate,
			notice_title as noticeTitle,
			notice_content as noticeContent
		from notice_tbl notice
		<choose>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
			<when test="searchType.equals('noticeTitle') ">
				where notice_title like '%'||#{keyword}||'%'
			</when>
		</choose>
		order by notice_no desc) ntc)
		where rnum between #{start} and #{end}
	</select>
	<select id="searchNoticeCount" resultType="int" parameterType="map">
		select count(*) from notice_tbl
		<choose>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
			<when test="searchType.equals('noticeTitle') ">
				where notice_title like '%'||#{keyword}||'%'
			</when>
		</choose>
	</select>
	
	<delete id="deleteNotice" parameterType="int">
		delete notice_tbl where notice_no = #{value }
	</delete>
	
	<select id="selectNotice" parameterType="int" resultType="ntc">
		select
		notice_no as noticeNo,
		(select member_Id from member_tbl m where ntc.member_no = m.member_no) as memberId,
		notice_title as noticeTitle,
		notice_content as noticeContent,
		notice_date as noticeDate
		from notice_tbl ntc
		where notice_no = #{value}
	</select>
	
	<insert id="insertNotice" parameterType="map">
		insert into notice_tbl values(
		notice_seq.nextval,
		#{memberNo},
		#{noticeTitle},
		#{noticeContent},
		to_char(sysdate,'yyyy-mm-dd')
		)
	</insert>
	<update id="updateNotice" parameterType="map">
		update notice_tbl set 
		notice_title=#{noticeTitle}, notice_content=#{noticeContent} 
		where notice_no = #{noticeNo}
	</update>
	
	<select id="selectChart" resultType="chart">
		select
		(select count(*) from member_tbl) as memberCount,		<!-- 총 회원수 -->
		(select count(*) from member_tbl 
		where (substr(enrolldate,6,2) like (select to_char(sysdate, 'mm') from dual)) 
		and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as memberMonth,  <!-- 이달의 신규 회원 수 -->
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '01' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as janMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '02' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as febMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '03' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as marMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '04' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as aprMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '05' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as mayMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '06' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as junMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '07' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as julMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '08' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as augMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '09' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as sepMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '10' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as octMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '11' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as novMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '12' and substr(enrolldate,3,2) like (select to_char(sysdate,'yy') from dual)) as decMember,
		
		(select count(*) from member_tbl where gender = 1) as genderMale,
		(select count(*) from member_tbl where gender = 2) as genderFemale,
		(select count(*) from member_tbl where gender != 1 and gender !=2) as unknownGender,
		
		(select count(*) from member_tbl where grade=1) as expertCount,		<!-- 총 전문가수 -->
		(select count(*) from member_tbl where grade=2) as generalMember,	<!-- 일반 회원수 -->
		(select count(*) from member_tbl where grade=4) as blackCount		<!-- 블랙 리스트 수-->
		from dual
	</select>
	
	<select id="selectMemberChart" parameterType="String" resultType="memberChart">
		select
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '01' and substr(enrolldate,1,4) like #{value }) as janMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '02' and substr(enrolldate,1,4) like #{value }) as febMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '03' and substr(enrolldate,1,4) like #{value }) as marMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '04' and substr(enrolldate,1,4) like #{value }) as aprMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '05' and substr(enrolldate,1,4) like #{value }) as mayMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '06' and substr(enrolldate,1,4) like #{value }) as junMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '07' and substr(enrolldate,1,4) like #{value }) as julMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '08' and substr(enrolldate,1,4) like #{value }) as augMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '09' and substr(enrolldate,1,4) like #{value }) as sepMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '10' and substr(enrolldate,1,4) like #{value }) as octMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '11' and substr(enrolldate,1,4) like #{value }) as novMember,
		(select count(*) from member_tbl where substr(enrolldate,6,2) like '12' and substr(enrolldate,1,4) like #{value }) as decMember
		from dual
	</select>
	
	<select id="selectSalesChart" parameterType="map" resultType="salesChart">
		select
		<choose>
			<when test="salesType == 1">
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '01' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as janSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '02' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as febSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '03' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as marSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '04' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as aprSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '05' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as maySales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '06' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as junSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '07' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as julSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '08' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as augSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '09' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as sepSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '10' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as octSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '11' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as novSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '12' and substr(pay_date,1,2) like #{year} and (select product_type from product_tbl where payment_tbl.product_no = product_tbl.product_no) = #{productType}) as decSales
			</when>
			<when test="salesType == 2">
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '01' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as janSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '02' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as febSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '03' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as marSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '04' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as aprSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '05' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as maySales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '06' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as junSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '07' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as julSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '08' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as augSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '09' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as sepSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '10' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as octSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '11' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as novSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '12' and substr(pay_date,1,2) like #{year} and (select product_category from product_tbl where payment_tbl.product_no = product_tbl.product_no) like #{productCategory}) as decSales
			</when>
			<otherwise>
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '01' and substr(pay_date,1,2) like #{year}) as janSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '02' and substr(pay_date,1,2) like #{year}) as febSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '03' and substr(pay_date,1,2) like #{year}) as marSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '04' and substr(pay_date,1,2) like #{year}) as aprSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '05' and substr(pay_date,1,2) like #{year}) as maySales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '06' and substr(pay_date,1,2) like #{year}) as junSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '07' and substr(pay_date,1,2) like #{year}) as julSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '08' and substr(pay_date,1,2) like #{year}) as augSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '09' and substr(pay_date,1,2) like #{year}) as sepSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '10' and substr(pay_date,1,2) like #{year}) as octSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '11' and substr(pay_date,1,2) like #{year}) as novSales,
				(select sum(PAYMENT) from payment_tbl where substr(pay_date,4,2) like '12' and substr(pay_date,1,2) like #{year}) as decSales
			</otherwise>
		</choose>
		from dual
	</select>
	<select id="answerPageData" parameterType="map" resultType="ans">
		select * from
		(select rownum as rnum, ans.* from
		(select
			ans_no as ansNo,
			ans_title as ansTitle,
			(select ans_state from question_tbl where answer_tbl.qst_no = question_tbl.qst_no) as ansState,
			ans_date as ansDate
			from answer_tbl
		<if test="selectNum != 0">
			where (select ans_state from question_tbl where answer_tbl.qst_no = question_tbl.qst_no) = #{selectNum}
		</if>
		order by ans_no desc) ans)
		where rnum between #{start} and #{end}
	</select>
	<select id="answerCount" parameterType="map" resultType="int">
		select count(*) from
		answer_tbl
		<if test="selectNum != 0">
			where (select ans_state from question_tbl where answer_tbl.qst_no = question_tbl.qst_no) = #{selectNum}
		</if>
	</select>
	<select id="selectQst" parameterType="int" resultType="q">
		select
			qst_no as qstNo,
			(select member_Id from member_tbl m where question_tbl.member_no = m.member_no) as memberId,
			qst_title as qstTitle,
			qst_content as qstContent,
			qst_date as qstDate
			from question_tbl
			where qst_no = #{value }
	</select>
	<select id="selectAns" parameterType="int" resultType="ans">
		select
			(select member_nick from member_tbl m where ans.member_no = m.member_no) as memberNick,
			ans_title as ansTitle,
			ans_content as ansContent
			from answer_tbl ans
			where qst_no = #{value }
	</select>
	<insert id="insertAnswer" parameterType="map">
		insert into answer_tbl values(answer_seq.nextval, #{qstNo}, #{memberNo}, #{ansTitle}, #{ansContent}, to_char(sysdate,'yyyy-mm-dd-hh24-mi'))
	</insert>
	<update id="updateAnsState" parameterType="int">
		update question_tbl set ans_state = 1 where qst_no = #{value } 
	</update>
	
	<select id="qstPageData" parameterType="map" resultType="q">
		select * from
		(select rownum as rnum, qst.* from
		(select
			qst_no as qstNo,
			qst_title as qstTitle,
			ans_state as ansState,
			qst_date as qstDate
			from question_tbl
			<if test="selectNum != 0">
				where ans_state = 0
			</if>
		order by qst_no desc) qst)
		where rnum between #{start} and #{end}
	</select>
	<select id="qstCount" parameterType="map" resultType="int">
		select count(*) from
		question_tbl
		<if test="selectNum != 0">
			where ans_state = 0
		</if>
	</select>
	
	<select id="myQstPageData" parameterType="map" resultType="q">
		select * from
		(select rownum as rnum, qst.* from
		(select
			qst_no as qstNo,
			qst_title as qstTitle,
			ans_state as ansState,
			qst_date as qstDate
			from question_tbl
			where member_no = #{memberNo }
		order by qst_no desc) qst)
		where rnum between #{start} and #{end}
	</select>
	<select id="myQstCount" parameterType="map" resultType="int">
		select count(*) from
		question_tbl
		<if test="selectNum != 0">
			where member_no = #{memberNo }
		</if>
	</select>
	<insert id="insertQuestion" parameterType="map">
		insert into question_tbl values(question_seq.nextval, #{memberNo}, #{qstTitle}, #{qstContent}, to_char(sysdate,'yyyy-mm-dd-hh24-mi'), 0)
	</insert>
	
	<select id="expertPageData" resultType="expert" parameterType="map">
		select * from
		(select rownum as rnum, exp.* from
		(select
			expert_no as expertNo,
			expert_name as expertName,
			expert_category as expertCategory,
			job_name as jobName,
			expert_app as expertApp
		from expert_tbl
			<if test="selectNum != 0">
				where expert_app = #{selectNum }-1
			</if>
		order by expert_no desc) exp)
		where rnum between #{start} and #{end}
	</select>
	<select id="expertCount" resultType="int" parameterType="map">
		select count(*) from expert_tbl
			<if test="selectNum != 0">
				where expert_app = #{selectNum }-1
			</if>
	</select>
	<select id="searchExpertPageData" parameterType="map" resultType="expert">
		select * from
		(select rownum as rnum, exp.* from
		(select
			expert_no as expertNo,
			expert_name as expertName,
			expert_category as expertCategory,
			job_name as jobName,
			expert_app as expertApp
		from expert_tbl
		<choose>
			<when test="searchType.equals('expertName') ">
				where expert_name like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('category') ">
				where expert_category like #{keyword}
			</when>
		</choose>
		order by expert_no desc) exp)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="searchExpertCount" parameterType="map" resultType="int">
		select count(*) from expert_tbl
		<choose>
			<when test="searchType.equals('expertName') ">
				where expert_name like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('category') ">
				where expert_category like #{category}
			</when>
		</choose>
	</select>
	<select id="selectExpert" parameterType="int" resultType="expert">
		select
			expert_no as expertNo,
			expert_category as expertCategory,
			expert_tag as expertTag,
			credential as credential,
			issuing_authority as issuingAuthority,
			acquistion_date as acquistionDate,
			certificate_path as certificatePath,
			
			expert_name as expertName,
			job_name as jobName,
			expert_phone as expertPhone,
			expert_email as expertEmail,
			expert_app as expertApp 
			
			from expert_tbl
			where expert_no = #{value }
	</select>
	<update id="updateExpertApp" parameterType="map">
		update expert_tbl set expert_app = #{selectNum } where expert_no = #{expertNo }
	</update>
	<insert id="insertRefuseExpert">
		insert into refuseexpert_tbl values(refuseexpert_seq.nextval, #{expertNo}, #{refuseContent})
	</insert>
	<select id="selectRefuseContent" parameterType="int" resultType="String">
		select refuse_content from refuseExpert_tbl where expert_no = #{value }
	</select>
</mapper>
