<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="product">
	<!-- 재건 -->
	<select id="selectProductList" resultType="pro">
	select * from
		(select rownum as rnum, b.* from
		(select
    p.product_no as productNo,
    p.expert_no as expertNo,
    (select member_nick from member_tbl m where p.expert_no = m.member_no) as expertName,
    (select member_picturepath from member_tbl m where p.expert_no = m.member_no) as memberPicturePath,
    p.product_Category as productCategory,
    p.product_title as productTitle,
    p.product_intro as productIntro,
    p.product_tag as productTag,
    cost,
    sale,
    (cost)*(sale)/100 as salecost,
    (select nvl(count(*),0) from review_tbl rev where p.product_no = rev.product_no) as reviewStar,
    (select avg(nvl(review_star, 0)) from review_tbl rev where rev.product_no = p.product_no)as revCount,
    p.product_imgpath as productImgPath
    from product_tbl p
	<if test="selPro!='전체'.toString()">	<!-- 카테고리 지정 -->
		where product_Category=#{selPro}
	</if>
	where product_type = 2
	order by p.product_no desc)b)
    where rnum between #{start} and #{end}
	</select>

	<!-- 재건 -->
	<select id="selectTotalCount" resultType="int" parameterType="map">
		select count(*) from product_tbl
		<if test="!selPro.equals('전체')">
		 	where product_Category = #{selPro}
		</if>
  </select>
  
	<!-- 윤지 -->
	<select id="selectOneProduct" parameterType="int" resultType="pro">
		select
			product_no as productNo,
			product_type as productType,
			product_title as productTitle,
	        product_Category as productCategory,
			product_intro as productIntro,
			product_tag as productTag,
			product_content as productContent,
			cost,
			product_qst as productQst,
			product_ans as productAns,
			product_addr as productAddr,
			sale,
			product_option as productOption,
			product_imgpath as productImgPath
		from product_tbl 
        where product_no=#{productNo}
	</select>
	
	<!-- 윤지 -->
	<select id="selectAllReview" parameterType="map" resultType="review">
		select 
			review_no as reviewNo, 
			pay_no as payNo, 
			member_no as memberNo, 
			review_title as reviewTitle, 
			review_content as reveiwContent, 
			review_star as reviewStar, 
			review_date as reviewDate, 
			product_no as productNo
		from (select rownum,n.* from(select * from review_tbl order by review_no desc)n) 
		where rownum between #{start} and #{end} and product_no=#{productNo}

	</select>
	<!-- 윤지 -->
	<select id="selectReviewCount" parameterType="int" resultType="int">
		select 
			count(*) as cnt 
		from review_tbl
		where product_no=#{productNo}
	</select>
	<!-- 윤지 -->
	<select id="selectReviewStar" parameterType="int" resultType="double">
		select 
			case when avg(r.review_star) is null then 0
         		 else avg(r.review_star)  
    		end review_star
		from product_tbl pro
		join payment_tbl pay
		on pro.product_no = pay.product_no
		join review_tbl r
		on pay.pay_no = r.pay_no
		where pro.product_no = #{productNo}
	</select>
	<!-- 윤지 -->
	<select id="selectPaymentExpertNoCount" parameterType="int" resultType="int">
		select 
			count(*) 
		from payment_tbl 
		where product_no=#{productNo}
	</select>
	<!-- 윤지 -->
	<select id="selectWishList" resultType="productWish">
 		select 
 			rnum, 
 			product_no as productNo, 
 			product_title as productTitle, 
 			wishcount
 		from
 			(select rownum as rnum,n.* from
				(select product_no, product_title,
    				(select nvl(count(*),0) from wishlist_tbl w where w.product_no = p.product_no) as wishCount
				from product_tbl p order by wishCount desc)n) 
		where rnum between 1 and 10
 	</select> 
 	<!-- 윤지 -->
	<select id="selectReviewList" parameterType="map" resultType="ProReviewMember">
		SELECT *
		FROM 
			( SELECT
				rownum as rnum, 
				r.review_star as reviewStar,
				m.member_no as memberNo,
				r.review_no as reviewNo,
				r.review_content as reviewContent,
				r.review_date as reviewDate,
				m.member_nick as memberNick,
				m.member_picturename as memberPictureName,
				m.member_picturepath as memberPicturePath
			FROM REVIEW_TBL R
			JOIN MEMBER_TBL M
			ON R.MEMBER_NO = M.MEMBER_NO
			WHERE R.product_no = #{productNo}
			ORDER BY R.REVIEW_NO DESC )
		WHERE rnum between #{start} and #{end}
	</select>
</mapper>
	