<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="manager">
	<select id="MemberList" resultType="member" parameterType="map">
		select * from
		(select rownum as rnum, mem.* from
		(select
			member_no as memberNo,
			member_id as memberId,
			member_nick as memberNick,
			member_phone as memberPhone,
			grade,
			member_point as memberPoint,
			member_reportcount as memberReportCount,
			enrolldate as enrollDate
		from member_tbl 
		<choose>
			<when test="selectNum != 0">
				where grade=#{selectNum }
			</when>
			<otherwise>
				where grade=1 or grade=2 or grade=3
			</otherwise>
		</choose>
		order by member_no desc) mem)
		where rnum between #{start} and #{end}
	</select>
	<select id="memberCount" resultType="int" parameterType="int">
		select count(*) from member_tbl
		<choose>
			<when test="value != 0">
				where grade=#{selectNum }
			</when>
			<otherwise>
				where grade=1 or grade=2 or grade=3
			</otherwise>
		</choose>
	</select>

	<update id="updateBlackList" parameterType="map">
		update member_tbl set
		<choose>
			<when test="updateNo == 0">
				grade=4
			</when>
			<otherwise>
				grade=2
			</otherwise>
		</choose>
		where member_no=#{memberNo}
	</update>
	
	<select id="searchMemberList" parameterType="map" resultType="member">
		select * from
		(select rownum as rnum, mem.* from
		(select
			member_no as memberNo,
			member_id as memberId,
			member_nick as memberNick,
			member_phone as memberPhone,
			grade,
			member_point as memberPoint,
			member_reportcount as memberReportCount,
			enrolldate as enrollDate
		from member_tbl 
		<choose>
			<when test="searchType.equals('memberId') ">
				where member_id like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('memberNick') ">
				where member_nick like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				where member_no = #{keyword }
			</otherwise>
		</choose>
		order by member_no desc) mem)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="searchMemberCount" resultType="int" parameterType="map">
		select count(*) from member_tbl
		<choose>
			<when test="searchType.equals('memberId') ">
				where member_id like '%'||#{keyword}||'%'
			</when>
			<when test="searchType.equals('memberNick') ">
				where member_nick like '%'||#{keyword}||'%'
			</when>
			<otherwise>
				where member_no = #{keyword }
			</otherwise>
		</choose>
	</select>
	
	<select id="paymentList" resultType="pay" parameterType="map">
		select * from
		(select rownum as rnum, pay.* from
		(select
			pay_no as payNo,
			(select member_Id from member_tbl m where payment.member_no = m.member_no) as memberId,
			product_no as productNo,
			pay_state as payState,
			pay_date as payDate,
			payment as payment,
			pay_method as payMethod,
			pay_usepoint as payUsepoint,
			pay_addpoint as payAddpoint
		from payment_tbl payment
		<choose>
			<when test="selectNum != 0">
				where pay_state = #{selectNum }
			</when>
			<otherwise>
				where pay_state = 1 or pay_state = 2 or pay_state = 3 
			</otherwise>
		</choose>
		order by pay_no desc) pay)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="searchPaymentList" resultType="pay" parameterType="map">
		select * from
		(select rownum as rnum, pay.* from
		(select
			pay_no as payNo,
			(select member_Id from member_tbl m where payment.member_no = m.member_no) as memberId,
			pay_state as payState,
			pay_date as payDate,
			payment as payment,
			pay_method as payMethod,
			pay_usepoint as payUsepoint,
			pay_addpoint as payAddpoint
		from payment_tbl payment
		<choose>
			<when test="searchType.equals('payNo') ">
				where pay_no = #{keyword }
			</when>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
		</choose>
		order by pay_no desc) pay)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="paymentCount" resultType="int" parameterType="int">
		select count(*) from payment_tbl
		<choose>
			<when test="value != 0">
				where pay_state=#{selectNum }
			</when>
			<otherwise>
				where pay_state=1 or pay_state=2 or pay_state=3
			</otherwise>
		</choose>
	</select>
	
	<select id="searchPaymentCount" resultType="int" parameterType="map">
		select count(*) from payment_tbl
		<choose>
			<when test="searchType.equals('payNo') ">
				where pay_no = #{keyword }
			</when>
			<when test="searchType.equals('memberId') ">
				where member_no in
        		(select member_no from member_tbl where member_id like '%'||#{keyword }||'%')
			</when>
		</choose>
	</select>
	
	<update id="updatePayState" parameterType="map">
		update payment_tbl set
		<choose>
			<when test="updateNo == 0">
				pay_state=3
			</when>
			<otherwise>
				pay_state=1
			</otherwise>
		</choose>
		where pay_no = #{payNo}
	</update>
	
	<select id="detailPayment" parameterType="int" resultType="pay">
		select
			pay_no as payNo,
			pay_date as payDate,
			(select product_title from product_tbl pro where pay.product_no = pro.product_no) as productTitle,
			(select product_imgPath from product_tbl pro where pay.product_no = pro.product_no) as productImgPath,
			pay_state as payState,
			payment,
			pay_method as payMethod,
			pay_usepoint as payUsepoint,
			pay_addpoint as payAddpoint
			from payment_tbl pay
			where pay_no = #{value }
	</select>
	
	
</mapper>
